#####################################
#            Created by             #
#                SBR                #
#               zzsxd               #
#####################################
import os
import platform
import random
import telebot
from threading import Lock
from config_parser import ConfigParser
from backend import DbAct, TempUserData
from db import DB
from frontend import Bot_inline_btns

#####################################
config_name = 'secrets.json'
my_channel_id = -1002020244592


####################################################################


def hello_msg(message, buttons):
    bot.send_message(message.chat.id, text='‚ñ∂–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µüëá\n'
                                           'üôã‚Äç‚ôÇÔ∏è–ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ–≤–æ–¥—É –±–æ—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ '
                                           '–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫—É\n'
                                           'üìä–ö—É—Ä—Å: 0.66', reply_markup=buttons.main_chat_btns())


def broadcast_msg(user_id, type, money, msg_id=None):
    buttons = Bot_inline_btns()
    type_msg = {False: f'–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ —Å—É–º–º—É {money}',
                True: f'–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ –≥–æ–ª–¥—ã –Ω–∞ —Å—É–º–º—É {money}'}
    if db_actions.get_request_by_user_id(user_id, type) is not None:
        personal_data = db_actions.get_user(user_id)
        admins = db_actions.get_admins()
        if not type:
            for admin in admins:
                bot.send_message(admin,
                                 f'{type_msg[type]}\n–ù–∏–∫–Ω–µ–π–º: @{personal_data[0]}\n–ò–º—è: {personal_data[1]}\n–§–∞–º–∏–ª–∏—è: '
                                 f'{personal_data[2]}\nID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}\nID –æ–±—Ä–∞—â–µ–Ω–∏—è: '
                                 f'{db_actions.get_request_by_user_id(user_id, type)}\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é ',
                                 reply_markup=buttons.accept_deny_btns(
                                     db_actions.get_request_by_user_id(user_id, type)))
                bot.forward_message(chat_id=admin, from_chat_id=user_id, message_id=msg_id)
        else:
            random_admin = random.choice(list(admins))
            db_actions.update_dialog_status(random_admin, db_actions.get_request_by_user_id(user_id, type))
            bot.send_message(random_admin,
                             f'{type_msg[type]}\n–ù–∏–∫–Ω–µ–π–º: @{personal_data[0]}\n–ò–º—è: {personal_data[1]}\n–§–∞–º–∏–ª–∏—è: '
                             f'{personal_data[2]}\nID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}\nID –æ–±—Ä–∞—â–µ–Ω–∏—è: '
                             f'{db_actions.get_request_by_user_id(user_id, type)}\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é ',
                             reply_markup=buttons.end_chat())


def main():
    @bot.message_handler(commands=['start'])
    def start_msg(message):
        buttons = Bot_inline_btns()
        statuss = ['member']
        user_id = message.chat.id
        db_actions.add_user(user_id, message.from_user.username, message.from_user.first_name,
                            message.from_user.last_name)
        for i in statuss:
            if i == bot.get_chat_member(chat_id=my_channel_id, user_id=message.from_user.id).status:
                hello_msg(message, buttons)
                break
            else:
                bot.send_message(message.chat.id,
                                 text='–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã –Ω–∏–∂–µ‚¨áÔ∏è',
                                 reply_markup=buttons.start_btns())

    @bot.message_handler(content_types=['text', 'photo'])
    def text(message):
        user_id = message.chat.id
        if db_actions.user_is_existed(user_id):
            buttons = Bot_inline_btns()
            code = temp_user_data.temp_data(user_id)[user_id][0]
            if code is not None:
                if code == 0:
                    try:
                        bot.send_message(message.chat.id, text=f'üì©–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –°–±–µ—Ä–±–∞–Ω–∫ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:\n'
                                                               f'<code>79889676131</code> –°–±–µ—Ä–±–∞–Ω–∫‚ù§Ô∏è‚Äçü©π\n'
                                                               f'<code>5228600516931674</code> –°–±–µ—Ä–±–∞–Ω–∫‚úåÔ∏è\n'
                                                               f'–ü–æ–ª—É—á–∞—Ç–µ–ª—å: –°–µ—Ä–≥–µ–π –ï.\n'
                                                               f'–ù–∞ ‚òïÔ∏è —Ç–æ–∂–µ –º–æ–∂–Ω–æ —Å–∫–∏–Ω—É—Ç—åüòâ\n'
                                                               f'üí≤–°—É–º–º–∞: {int(message.text)}‚ÇΩ\n'
                                                               f'üì∑–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞.', parse_mode='html')
                        temp_user_data.temp_data(user_id)[user_id][1] = int(message.text)
                        temp_user_data.temp_data(user_id)[user_id][0] = 1
                    except:
                        temp_user_data.temp_data(user_id)[user_id][0] = None
                        bot.send_message(message.chat.id, '‚ùå–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞‚ùå')
                elif code == 1:
                    db_actions.add_request(user_id, temp_user_data.temp_data(user_id)[user_id][1], False)
                    broadcast_msg(user_id, False, temp_user_data.temp_data(user_id)[user_id][1], message.id)
                    temp_user_data.temp_data(user_id)[user_id][0] = None
                elif code == 2:
                    try:
                        bot.send_message(message.chat.id, text='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞‚úÖ\n'
                                                               '–° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!')
                        if 100 <= int(message.text) <= int(db_actions.get_gold(user_id)):
                            db_actions.add_request(user_id, int(message.text), True)
                            db_actions.update_dialog_open(user_id, True)
                            broadcast_msg(user_id, True, int(message.text))
                        else:
                            raise
                    except:
                        bot.send_message(message.chat.id, '‚ùå–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞‚ùå')
                    finally:
                        temp_user_data.temp_data(user_id)[user_id][0] = None
                elif code == 5:
                    try:
                        rub = int(message.text)
                        result = round(100 / 66 * rub, 2)
                        bot.send_message(message.chat.id, f'üíµ{rub}‚ÇΩ = {result}G')
                    except:
                        bot.send_message(message.chat.id, '‚ùå–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞‚ùå')
                    finally:
                        temp_user_data.temp_data(user_id)[user_id][0] = None
                elif code == 6:
                    try:
                        gold = int(message.text)
                        result = round(gold * 66 / 100, 2)
                        bot.send_message(message.chat.id, f'{gold}G = üíµ{result}‚ÇΩ')
                    except:
                        bot.send_message(message.chat.id, '‚ùå–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞‚ùå')
                    finally:
                        temp_user_data.temp_data(user_id)[user_id][0] = None
            else:
                if db_actions.get_dialog_status_client(user_id):
                    admin_id = db_actions.get_admin_id_from_request_id(user_id, True)
                    print(admin_id)
                    bot.forward_message(chat_id=admin_id, from_chat_id=user_id, message_id=message.id)
                elif message.text == 'üí∞–ü–æ–ø–æ–ª–Ω–∏—Ç—å':
                    if db_actions.get_request_by_user_id(user_id, False) is None:
                        bot.send_message(message.chat.id, text='‚úè –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –≤ —Ä—É–±–ª—è—Ö',
                                         reply_markup=buttons.replenish_btns())
                        temp_user_data.temp_data(user_id)[user_id][0] = 0
                    else:
                        bot.send_message(message.chat.id, text='‚úÖ–ó–∞—è–≤–∫–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞‚úÖ')
                elif message.text == 'üçØ–ö—É–ø–∏—Ç—å –≥–æ–ª–¥—É':
                    bot.send_message(message.chat.id, text='–í–∞—à –±–∞–ª–∞–Ω—Å:\n')
                elif message.text == 'üì®–í—ã–≤–æ–¥':
                    if db_actions.get_request_by_user_id(user_id, True) is None:
                        bot.send_message(message.chat.id,
                                         text='‚ùóÔ∏è–í—ã–≤–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç 100G‚ùóÔ∏è\n–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≥–æ–ª–¥—ã?',
                                         reply_markup=buttons.withdrawal_btns())
                        temp_user_data.temp_data(user_id)[user_id][0] = 2
                    else:
                        bot.send_message(message.chat.id, text='‚úÖ–ó–∞—è–≤–∫–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞‚úÖ')
                elif message.text == 'üòÑ–û—Ç–∑—ã–≤—ã':
                    bot.send_message(message.chat.id, text='https://t.me/AdviceOTZIVI')
                elif message.text == 'üìâ–ö—É—Ä—Å':
                    bot.send_message(message.chat.id, text='‚úÖ–ö—É—Ä—Å: 0.66 | 66‚ÇΩ = 100G')
                elif message.text == 'üî¢–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä':
                    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚§µÔ∏è',
                                     reply_markup=buttons.calculator_btns())
                elif message.text == '‚ú®–ü–æ—Å—á–∏—Ç–∞—Ç—å —Ä—É–±–ª–∏ –≤ –≥–æ–ª–¥–µ':
                    bot.send_message(message.chat.id, text='‚úçÔ∏è–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (–≤ ‚ÇΩ)')
                    temp_user_data.temp_data(user_id)[user_id][0] = 5
                elif message.text == '‚ú®–ü–æ—Å—á–∏—Ç–∞—Ç—å –≥–æ–ª–¥—É –≤ —Ä—É–±–ª—è—Ö':
                    bot.send_message(message.chat.id, text='‚úçÔ∏è–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (–≤ G)')
                    temp_user_data.temp_data(user_id)[user_id][0] = 6
                elif message.text == '‚ú®–ü–æ—Å—á–∏—Ç–∞—Ç—å —Ä—É–±–ª–∏ –≤ –≥–æ–ª–¥–µ':
                    bot.send_message(message.chat.id, text='‚úçÔ∏è–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (–≤ ‚ÇΩ)')
                elif message.text == '‚ú®–ü–æ—Å—á–∏—Ç–∞—Ç—å –≥–æ–ª–¥—É –≤ —Ä—É–±–ª—è—Ö':
                    bot.send_message(message.chat.id, text='‚úçÔ∏è–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (–≤ G)')
                elif message.text == 'üè†–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                    hello_msg(message, buttons)
                elif message.text == 'üë®‚Äçüíª–ü–æ–¥–¥–µ—Ä–∂–∫–∞':
                    bot.send_message(message.chat.id, text='https://t.me/YT_ADVICE')
                elif message.text == 'ü§ñ–ü—Ä–æ—Ñ–∏–ª—å':
                    bot.send_message(message.chat.id, text=f'üìã–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {message.from_user.first_name}\n'
                                                           f'üçØ–ó–æ–ª–æ—Ç–æ: {db_actions.get_money(user_id)[1]}G')
                elif user_id in db_actions.get_admins():
                    if message.text is not None:
                        candidate_id = db_actions.get_request_by_request_id(message.text[8:])
                        if candidate_id is not None:
                            if message.text[:7] == '‚úÖaccept':
                                db_actions.add_money(candidate_id, message.text[8:])
                                db_actions.convert_money_to_gold(candidate_id)
                                bot.send_message(candidate_id, '‚úÖ–ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞, –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω!‚úÖ')
                            elif message.text[:7] == '‚ùåreject':
                                bot.send_message(candidate_id, '‚ùå–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞, —á–µ–∫ –Ω–µ–≤–µ—Ä–Ω—ã–π‚ùå')
                            db_actions.del_request_by_request_id(message.text[8:])
                    if db_actions.get_dialog_status(user_id) is not None:
                        client_id = db_actions.get_request_by_request_id(db_actions.get_dialog_status(user_id))
                        if message.text == "‚úÖ–ó–∞–∫–æ–Ω—á–∏—Ç—å —á–∞—Ç":
                            db_actions.del_request_by_request_id(db_actions.get_dialog_status(user_id))
                            db_actions.update_dialog_status(user_id, None)
                            db_actions.update_dialog_open(client_id, False)
                            bot.send_message(client_id, '‚ùå–ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω‚ùå')
                            bot.send_message(user_id, '‚ùå–ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω‚ùå')
                            hello_msg(message, buttons)
                        else:
                            bot.forward_message(chat_id=client_id, from_chat_id=user_id, message_id=message.id)
                    else:
                        bot.send_message(user_id, '‚ùå–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π‚ùå')

        else:
            bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞')

    bot.polling(none_stop=True)


if '__main__' == __name__:
    os_type = platform.system()
    work_dir = os.path.dirname(os.path.realpath(__file__))
    config = ConfigParser(f'{work_dir}/{config_name}', os_type)
    db = DB(f'{work_dir}/{config.get_config()["db_file_name"]}', Lock(), config.get_config())
    temp_user_data = TempUserData()
    db_actions = DbAct(db, config.get_config())
    bot = telebot.TeleBot(config.get_config()['tg_api'])
    main()
